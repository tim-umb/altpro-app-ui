/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { IconButton, SvgIcon, Typography } from '@mui/material';
import ViewHeadlineIcon from '@mui/icons-material/ViewHeadline';
import VectorImage from 'src/assets/images/AppBar_Vector_1.png';
import Vector1Image from 'src/assets/images/AppBar_Vector_2.png';
import Vector2Image from 'src/assets/images/AppBar_Vector_3.png';
import { styled } from '@mui/material/styles';
import { AppBarProps } from 'src/types';

const AppBar1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100vw',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: 'auto',
});

const Paper: any = styled('div')(({ theme }: any) => ({
  backgroundColor: theme.palette['primary']['main'],
  boxShadow: theme.customShadows['elevation']['4'].boxShadow,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
}));

const CustomToolbar: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px 12px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
});

const LeftSide: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const IconButton1: any = styled(IconButton)(({ theme }: any) => ({
  margin: `0px`,
}));

const Typography1: any = styled(Typography)(({ theme }: any) => ({
  margin: `0px 0px 0px 16px`,
  color: theme.palette['primary']['contrast'],
  fontStyle: `normal`,
  fontFamily: `Roboto`,
  fontWeight: `600`,
  fontSize: `18.700000762939453px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `116.70000553131104%`,
  textTransform: `none`,
}));

const Stack: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Icon1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const HistoryOutlined: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `20px`,
  height: `20px`,
  margin: `0px`,
  overflow: `hidden`,
});

const Vector: any = styled('img')({
  height: `15px`,
  width: `17.5px`,
  position: `absolute`,
  left: `1px`,
  top: `3px`,
});

const Icon2: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px 0px 0px 16px`,
});

const NotificationsOutline: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `20px`,
  height: `20px`,
  margin: `0px`,
  overflow: `hidden`,
});

const Vector1: any = styled('img')({
  height: `16.25px`,
  width: `13.33px`,
  position: `absolute`,
  left: `3px`,
  top: `2px`,
});

const Icon3: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px 0px 0px 16px`,
});

const LogoutOutlined: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `20px`,
  height: `20px`,
  margin: `0px`,
  overflow: `hidden`,
});

const Group: any = styled('div')({
  display: `flex`,
  position: `absolute`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `15px`,
  height: `15px`,
  left: `3px`,
  top: `3px`,
});

const Vector2: any = styled('img')({
  height: `15px`,
  width: `15px`,
  position: `absolute`,
  left: `0px`,
  top: `0px`,
});

const MinHeight: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  width: `0px`,
  height: `48px`,
  margin: `0px`,
});

function AppBar(props: AppBarProps): JSX.Element {
  return (
    <AppBar1 className={props.className}>
      <Paper>
        <CustomToolbar>
          <LeftSide>
            <IconButton1 size={'medium'} color={'inherit'} disabled={false}>
              <SvgIcon
                component={ViewHeadlineIcon}
                htmlColor={`rgba(255, 255, 255, 1)`}
              ></SvgIcon>
            </IconButton1>
            <Typography1 variant={'body1'} gutterBottom={false}>
              {'Title'}
            </Typography1>
          </LeftSide>
          <Stack>
            <Icon1>
              <HistoryOutlined>
                <Vector src={VectorImage} loading="lazy" alt={'Vector'} />
              </HistoryOutlined>
            </Icon1>
            <Icon2>
              <NotificationsOutline>
                <Vector1 src={Vector1Image} loading="lazy" alt={'Vector'} />
              </NotificationsOutline>
            </Icon2>
            <Icon3>
              <LogoutOutlined>
                <Group>
                  <Vector2 src={Vector2Image} loading="lazy" alt={'Vector'} />
                </Group>
              </LogoutOutlined>
            </Icon3>
          </Stack>
          <MinHeight></MinHeight>
        </CustomToolbar>
      </Paper>
    </AppBar1>
  );
}

export default AppBar;
